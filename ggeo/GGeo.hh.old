
        static const char* CATHODE_MATERIAL ; 


#ifdef OLD_CATHODE
    public:
        // m_materiallib
        void setCathode(GMaterial* cathode);
        GMaterial* getCathode() const ;  
        const char* getCathodeMaterialName() const ;
#endif
        void loadFromG4DAE();  // AssimpGGeo::load


#ifdef OLD_SENSOR
    public:
        void addLVSDMT(const char* lv, const char* sd, const char* mt);
        unsigned getNumLVSD() const ;
        unsigned getNumLVMT() const ;
        std::pair<std::string,std::string> getSDMT(const char* lv) const ;
        std::pair<std::string,std::string> getLVSD(unsigned idx) const ;
        std::pair<std::string,std::string> getLVMT(unsigned idx) const ;
    public:
        void dumpCathodeLV(const char* msg="GGeo::dumpCathodeLV") const ;
        const char* getCathodeLV(unsigned int index) const ; 
        void getCathodeLV( std::vector<std::string>& lvnames ) const ;
        unsigned int getNumCathodeLV() const ;
        int findCathodeLVIndex(const char* lv) const ; // -1 if not found 
    public:
        void getSensitiveLVSDMT( std::vector<std::string>& lvn, std::vector<std::string>& sdn, std::vector<std::string>& mtn ) const ;
#endif

#ifdef OLD_GEOM
        void loadAnalyticFromGLTF();
        void loadAnalyticFromCache();
        void saveAnalytic();
#endif

#ifdef OLD_GEOM
        // target 0 : all geometry of the mesh, >0 : specific volumes
        glm::vec4 getCenterExtent(unsigned int target, unsigned int merged_mesh_index=0u );
#endif


